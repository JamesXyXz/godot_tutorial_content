[gd_scene load_steps=5 format=2]

[sub_resource type="Shader" id=1]
code = "shader_type canvas_item;

uniform float intensity = 0.5f;
uniform float layers = 5f;
uniform float speed = 4f;

float gradient(vec2 uv){
	return (0.5f - distance(vec2(uv.x, uv.y), vec2(0.5, 0.5)));
}

vec4 colorize(float c, float a){
	vec4 palete;
	palete = vec4(c, c, c, a);
	return palete;
}

void fragment(){
	vec4 bg = texture(TEXTURE, UV - TIME / speed);
	COLOR.r = gradient(UV);
	COLOR.r = clamp(COLOR.r * bg.r * intensity * 10f, 0f, 1f);
	COLOR.r = floor(COLOR.r * layers) / layers;
	COLOR.a = float(COLOR.r > 0f);
	COLOR = colorize(COLOR.r, COLOR.a);
}"

[sub_resource type="ShaderMaterial" id=2]
shader = SubResource( 1 )
shader_param/intensity = 1.0
shader_param/layers = 5.0
shader_param/speed = 8.0

[sub_resource type="OpenSimplexNoise" id=3]

[sub_resource type="NoiseTexture" id=4]
seamless = true
noise = SubResource( 3 )

[node name="Node2D" type="Node2D"]

[node name="Sprite" type="Sprite" parent="."]
material = SubResource( 2 )
texture = SubResource( 4 )
